#+TITLE: Parinfer Mode

* Why fork

[[https://github.com/DogLooksGood/parinfer-mode][Parinfer Mode]] is unmaintained.

[[https://github.com/justinbarclay/parinfer-rust-mode][parinfer-rust-mode]] seems okay if it works, but it…

- requires either having a Rust compiler or downloading a prebuilt binary
- relies on a [[https://github.com/justinbarclay/parinfer-rust][fork]] of [[https://github.com/eraserhd/parinfer-rust][parinfer-rust]], and
- has itself not had an update since April 2021.

As I rely on this mode to do all my Lisp editing, I figured I might as well make some changes to my local copy.

* What Is Parinfer

#+begin_quote
*/Parinfer/* is a proof-of-concept editor mode for Lisp programming languages. It simplifies the way we write Lisp by auto-adjusting parens when indentation changes and vice versa. The hope is to make basic Lisp-editing easier for newcomers and experts alike, while still allowing existing plugins like Paredit to satisfy the need for more advanced operations.

— https://shaunlebron.github.io/parinfer/
#+end_quote

There are two modes, /Indent/ and /Paren/. Indent mode allows you to edit indentation, while Parinfer automatically adjusts parens; Paren mode allows you to edit parens, while Parinfer automatically adjusts indentation.

* Installation

#+begin_src emacs-lisp
(straight-use-package '(parinfer :host github :repo "kisaragi-hiu/parinfer-mode"))
#+end_src

Recommended configuration:

#+BEGIN_SRC elisp
(use-package parinfer-mode
  :init
  (setq parinfer-extensions
        (list 'defaults       ; should be included.
              'pretty-parens  ; different paren styles for different modes.
              'lispy          ; If you use Lispy. With this extension, you should install Lispy and do not enable lispy-mode directly.
              'paredit        ; Bindings for Paredit commands
              'smart-tab      ; C-b & C-f jump positions and smart shift with tab & S-tab.
              'smart-yank))   ; Yank behavior depend on mode.
  (add-hook 'clojure-mode-hook #'parinfer-mode)
  (add-hook 'scheme-mode-hook #'parinfer-mode)
  ;; Major modes run hooks of their entire ancestry. Adding this to
  ;; lisp-data-mode is enough for it to take effect in lisp-mode and
  ;; emacs-lisp-mode, both of which are derived from lisp-data-mode.
  (if (boundp 'lisp-data-mode-hook)
      (add-hook 'lisp-data-mode-hook #'parinfer-mode)
    ;; Before Emacs 28, emacs-lisp-mode derives from lisp-mode, so add
    ;; the hook there.
    (add-hook 'lisp-mode-hook #'parinfer-mode))
  :config
  (define-key parinfer-mode-map
    (kbd "C-,") #'parinfer-toggle-mode))
#+END_SRC

* Commands

- =parinfer-toggle-mode= :: toggle between indent mode and paren mode
- =parinfer-diff= :: show how switching to indent mode will modify the buffer
- =parinfer-auto-fix= :: manual trigger for auto adjustment of indentation for the whole buffer (when parens are balanced)

* Configuration

- =parinfer-auto-switch-indent-mode=

  Possible values: =nil= (default), =t=, =closing=

  Switch to indent mode whenever parens are balanced in paren mode.

  Set this to =closing= to only do so after inserting a closing paren.

- =parinfer-delay-invoke-threshold=

  Possible values: number of characters; defaults to 6000

  Text processing is normally done immediately after a command completes. If the text to be processed has more than this number of characters, it will instead be done in an idle timer (after =parinfer-delay-invoke-idle= seconds, which defaults to 0.3).

- =parinfer-lighters= (default: =("Parinfer:Indent" . "Parinfer:Paren")=)

  The mode line shows “Parinfer:Indent” when Parinfer is active in indent mode, “Parinfer:Paren” if it is in paren mode. The car is the indent mode string, while the cdr is the paren mode string.

  There is no need to add the leading space. It is added automatically.

- =parinfer-extensions= (default: =(defaults pretty-parens smart-yank)=)

  Enabled extensions.

  An extension contains different pieces of code that run at different stages (entering indent mode, entering paren mode, enabling and disabling =parinfer-mode=).

  Possible extensions:

  | Extension     | Function                                                                              |
  |---------------+---------------------------------------------------------------------------------------|
  | defaults      | Should be enabled, basic compatibility                                                |
  | pretty-parens | Dim parens in *Indent Mode*, use rainbow delimiters in *Paren Mode*  |
  | smart-yank    | Make yank (paste) preserve indentation in *Indent Mode* & preserve parens in *Paren Mode*  |
  | smart-tab     | Make ~C-f~ & ~C-b~ on an empty line go to next/previous indentation, possibly inserting extra spaces in the process. |
  | paredit       | Introduce some paredit commands from paredit-mode.                                    |
  | lispy         | Integration with Lispy.                                                               |

* Current Issues

=parinfer-mode= currently assumes space-based indentation and will break if tabs are being used.

* Credits
- [[https://github.com/DogLooksGood][Shi Tianshu]] :: Original creator of parinfer-mode

** Original credits
- [[https://github.com/shaunlebron][shaunlebron]] :: Create [[https://shaunlebron.github.io/parinfer/][Parinfer]].
- [[https://github.com/oakmac][oakmac]] :: Bring Parinfer to Emacs with [[https://github.com/oakmac/parinfer-elisp][parinfer-elisp]].
- [[https://github.com/tumashu][tumashu]] :: Help me a lot in writing this plugin.
- [[https://github.com/purcell][purcell]] & [[https://github.com/syohex][syohex]] :: Advice and Tips for writing emacs plugin

* License
parinferlib.el from [[https://github.com/oakmac/parinfer-elisp][parinfer-elisp]], is licensed under the [[https://github.com/oakmac/parinfer-elisp/blob/master/LICENSE.md][ISC]].

The rest is licensed under the GPLv3.
